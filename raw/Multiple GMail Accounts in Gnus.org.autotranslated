#+TITLE: Multiple GMail Accounts in Gnus
#+URL: http://www.cataclysmicmutation.com/2010/11/multiple-gmail-accounts-in-gnus/
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2020年 01月 15日 星期三 19:02:36 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
I have both my home and work email accounts through Gmail (work being hosted through our own domain). I wanted to configure Gnus to access both imap accounts with the following requirements:
翻译:我同时拥有个人和工作的Gmail邮箱账户（工作邮箱通过我们自己的域名托管）。我想配置Gnus以访问这两个imap账户，满足以下要求：

- Visually differentiate between mailboxes in the different accounts (Gnus wants to call all your Gmail account inboxes “INBOX”)
翻译:在不同的账户中（Gnus希望将您所有的Gmail收件箱都称为“INBOX”）从视觉上区分邮箱
- Have outgoing mail routed through the correct account, with an appropriate signature, from address, other headers, etc.
翻译:确保外发邮件通过正确的账户发送，使用恰当的签名、发件地址、以及其他邮件头信息等。
- Have expiry work the way I want -- basically, in “normal” mailboxes (not special Gmail folders), I want to be able to expire messages and have them moved immediately into the Gmail “All Mail” folder for archival.
翻译:让过期功能按我想要的方式工作--基本上，在“正常”邮箱（不是特殊的Gmail文件夹）中，我想能够使邮件过期并立即将其移动到Gmail的“所有邮件”文件夹中进行归档。
- Get the desired behavior for each mailbox (INBOX always visible, show read messages, etc.)
翻译:获取每个邮箱所需的显示行为（收件箱始终可见、显示已读邮件等）。

There are a number of hurdles you have to climb over to get this working acceptably, and I never found one source that had a complete working solution that met my needs, so I decided to publish my setup in the hopes that it might prove useful for someone. In short, here are the problems we need to solve:
翻译:要使这项工作达到可接受的水平，你需要克服许多障碍，我从未找到一个完整且满足我需求的解决方案来源，因此我决定发布我的设置，希望它可能对某人有所帮助。简而言之，我们需要解决的问题如下：

- All your google accounts will have the same server name, breaking authinfo logins
翻译:您所有的谷歌账户都将具有相同的服务器名称，这将破坏authinfo登录方式。
- Get Gnus to understand how to set behaviors per-mailbox
翻译:让Gnus理解如何为每个邮箱设置行为
- Make outgoing mail route through the correct account's SMTP server
翻译:通过正确的账户SMTP服务器发送外发邮件
- Figure out a way to identify mailboxes by name in the Group buffer
翻译:找出一种方法在群发邮件缓冲区中按名称识别邮箱。

*** Getting authinfo to work with multiple Gmail accounts
:PROPERTIES:
:CUSTOM_ID: getting-authinfo-to-work-with-multiple-gmail-accounts
:END:

Ordinarily, you'd configure your select methods in Gnus something like the following:
翻译:通常，您会在Gnus中这样配置您的选择方法：

‘Account setup in .gnus'
翻译:`.gnus 账户设置`

#+BEGIN_EXAMPLE
(setq gnus-secondary-select-methods
'((nnimap "home"
(nnimap-address "imap.gmail.com")
(nnimap-server-port 993)
(nnimap-stream ssl)
(nnimap-authinfo-file "~/.authinfo"))
(nnimap "work"
(nnimap-address "imap.gmail.com")
(nnimap-server-port 993)
(nnimap-stream ssl)
(nnimap-authinfo-file "~/.authinfo"))))
#+END_EXAMPLE

You'd then put your credentials into your .authinfo file like so:
翻译:然后，您可以将凭据放入您的.authinfo文件中，如下所示：

```
machine example.com login user password secret
```

#+BEGIN_EXAMPLE
machine imap.gmail.com login mylogin password mypassword port imaps
machine imap.gmail.com login mylogin2 password mypassword2 port imaps
#+END_EXAMPLE

The problem is that in our case, both accounts have a server name of “imap.gmail.com”, and thus authinfo can't figure out which credentials to send to which account. If you're using a new enough Gnus version, this problem can be solved by replacing “imap.gmail.com” in .authinfo with the account name “home” or “work” from .gnus. Alternately, you can define aliases for imap.gmail.com in your localhosts file and configure each account to access a different alias, allowing you to have different server names in .authinfo. I went with the simpler version.
翻译:问题在于在我们的案例中，两个账户的服务器名称都是“imap.gmail.com”，因此authinfo无法确定应该向哪个账户发送哪些凭据。如果你使用的是足够新的Gnus版本，这个问题可以通过在.authinfo中将“imap.gmail.com”替换为从.gnus中的账户名“home”或“work”来解决。或者，你可以在你的本地hosts文件中为imap.gmail.com定义别名，并配置每个账户访问不同的别名，这样你就可以在.authinfo中使用不同的服务器名称了。我选择了更简单的方案。

#+BEGIN_EXAMPLE
machine home login mylogin password mypassword port imaps
machine work login mylogin2 password mypassword2 port imaps
#+END_EXAMPLE

*** Setting up Multiple SMTP Servers
:PROPERTIES:
:CUSTOM_ID: setting-up-multiple-smtp-servers
:END:

Gnus by default has no mechanism for switching SMTP servers on outgoing messages. There are a few options, but the simplest is probably to install [[http://msmtp.sourceforge.net/][msmtp]]. This is a simple little program that accepts a command line parameter that tells it which server to use, and then connects to that server to send your mail. Once you've installed and configured that (my configuration is shown below), we'll still need to customize Gnus to pass the right flags to msmtp depending on where we send the message from.
翻译:默认情况下，Gnus 没有在发送邮件时切换 SMTP 服务器的机制。有几个选项，但最简单的方法可能是安装[[http://msmtp.sourceforge.net/][msmtp]]。这是一个简单的程序，它接受一个命令行参数来告诉它使用哪个服务器，然后连接到那个服务器来发送您的邮件。一旦您安装并配置了它（下面的配置示例），我们仍然需要自定义Gnus，以便根据我们从哪里发送消息来传递正确的标志给msmtp。

#+BEGIN_EXAMPLE
defaults
tls on
auto_from on
logfile ~/.msmtp.log

account home
host smtp.gmail.com
tls on
tls_certcheck off
auth on
from myusername@gmail.com
user myusername@gmail.com
password myhomepassword
port 587

account work
host smtp.gmail.com
tls on
tls_certcheck off
auth on
from me@myworkdomain.com
user me@myworkdomain.com
password myworkpassword
port 587
#+END_EXAMPLE

*** Setting behaviors per Mailbox
:PROPERTIES:
:CUSTOM_ID: setting-behaviors-per-mailbox
:END:

Most of what I need can be accomplished through Gnus' notion of group parameters. You can theoretically customize parameters through the Customize buffer, but I abhor that awful abomination and would prefer to do it through Lisp. Fortunately, you can set most group parameters via the gnus-parameters variable. This variable is a list of alists, each of which contains a regular expression matching a group name followed by a set of parameters for that group. Below is my gnus-parameters.
翻译:我所需的大部分功能都可以通过Gnus的组参数概念来完成。从理论上讲，您可以通过自定义缓冲区来定制参数，但我非常讨厌那个可怕的怪物，宁愿通过Lisp来做。幸运的是，您可以通过gnus-parameters变量设置大多数组参数。这个变量是一个alist列表，其中的每个alist都包含一个匹配组名的正则表达式，后面跟着该组的参数集。下面是我的gnus-parameters：

‘Account customization in .gnus'
翻译:`.gnus 账户自定义`

#+BEGIN_EXAMPLE
(setq gnus-parameters
'(("nnimap work:INBOX"
(display . all)
(posting-style
(name "Deon Garrett")
(address "me@myworkaddress.com")
(organization "My Employer")
(signature-file "~/.signature-work"))
(expiry-target . delete)
("nnimap work:[Gmail]/.*"
(display . all)
(posting-style
(name "Deon Garrett")
(address "me@myworkaddress.com")
(organization "My Employer")
(signature-file "~/.signature-work"))
(expiry-wait . never))
("nnimap home:(INBOX|lists..*)"
(display . all)
(posting-style
(name "Deon Garrett")
(address "me@myhomeaddress.com")
(signature-file "~/.signature-home"))
(expiry-target . delete)
("nnimap home:[Gmail]/.*"
(display . all)
(posting-style
(name "Deon Garrett")
(address "me@myhomeaddress.com")
(signature-file "~/.signature-home"))
(expiry-wait . never))))
#+END_EXAMPLE

There's a lot going on here, but basically, I have two accounts “home” and “work”, and for each account, I have one set of parameters for normal mailboxes, and another set for those “special” gmail mailboxes that I want to treat slightly differently (mainly with respect to expiry). Note the regular expressions for the group names: “nnimap XXXX:YYYY” where XXXX is the account name (“home” or “work”) and YYYY must match only the mailboxes I want. So the first block matches only the INBOX on my work account. It sets the headers I want on outgoing mail, tells Gnus to always show all messages when I enter the group, sends the correct switch to the msmtp program to select my work account (Edit: msmtp supports automatically choosing an account based on the From header. See my updated example .msmtprc file),and sets up expiry to immediate move expired messages to the “[GMail]/All Mail” folder. *Correction: I've since changed the expiry to delete the message instead of moving it to All Mail, as Gmail always keeps a copy in All Mail anyway. I have left the “expiry . never” for the Gmail groups to prevent deletion of messages from inside the Google special groups. **The second block is still the work account, but now matches only mailboxes named like “[GMail]/”, that is, all the special Gmail boxes. The only different setting here is that I tell Gnus to never expire a message from a special folder. The remaining two blocks of settings configure my home account in a similar fashion. There are a few global settings we need to set as well. We need to tell Gnus to use msmtp as our sendmail replacement. I also want all my subscribed groups to be always visible, and the “visible” group parameter won't work from gnus-parameters, so per the documentation, we need to set that in an alternate fashion. You should also set up a default set of outgoing headers so that if you send mail from outside any group, you'll still have some useful default. Below is the elisp to set up msmtp and make the groups visible. I'll leave it to you to set most of those other variables, as they're standard Gnus settings that you probably already know.
翻译:这里发生的事情很多，但基本上，我有两个账户“家庭”和“工作”，每个账户都有正常邮箱的一组参数，以及一组用于我想要稍微不同对待的特殊gmail邮箱（主要是关于到期时间）。注意群组名称的正则表达式：“nnimap XXXX:YYYY”，其中XXXX是账户名（“家庭”或“工作”），而YYYY必须只匹配我想要的邮箱。所以第一个块只匹配我在工作账户上的收件箱。它设置了我想要的发件人邮件头，告诉Gnus当我进入群组时要始终显示所有消息，发送正确的切换到msmtp程序以选择我的工作账户（编辑：msmtp支持根据From报头自动选择账户。请参阅我更新的.msmtrc文件），并设置了立即移动过期消息到“[GMail]/全部邮件”文件夹的到期时间。*更正：我已经将到期时间改为删除消息而不是将其移至全部邮件，因为无论如何Gmail都会在全部邮件中保留一份副本。我将“到期时间从不”设置为防止从Google特殊群组内部删除消息。**第二个块仍然是工作账户，但现在只匹配像“[GMail]/”这样的邮箱名称，即所有的特殊Gmail邮箱。这里的唯一不同设置是我告诉Gnus永远不会过期来自特殊文件夹的消息。剩下的两块配置设置以类似的方式配置了我的家庭账户。我们还需要设置一些全局设置。我们需要告诉Gnus使用msmtp作为我们的sendmail替代品。我还希望所有订阅的群组始终保持可见，而“可见”群组参数在gnus-parameters中不起作用，因此按照文档所述，我们需要以另一种方式设置。您还应该设置一个默认的发件人邮件头集合，以便如果您从任何群组外部发送邮件，您仍然会有一些有用的默认值。下面是设置msmtp使群组可见的elisp代码。我会让您自己设置大多数其他变量，因为这些是标准的Gnus设置，你可能已经知道了。

‘SMTP setup in .gnus'
翻译:在`.gnus`中设置SMTP

#+BEGIN_EXAMPLE
(setq message-send-mail-function 'message-send-mail-with-sendmail)
(setq sendmail-program "/usr/local/bin/msmtp")
(setq gnus-permanently-visible-groups ".*")
#+END_EXAMPLE

*** Fixing the Naming Problem
:PROPERTIES:
:CUSTOM_ID: fixing-the-naming-problem
:END:

There's one last really annoying issue -- if you open gnus with this configuration and subscribe to INBOX from both accounts, you'll see the groups buffer with the following:
翻译:最后一个非常烦人的问题是——如果你用这个配置打开gnus并且同时订阅了两个账户的INBOX，你会看到组缓冲区显示如下：

#+BEGIN_EXAMPLE
0: INBOX
0: INBOX
#+END_EXAMPLE

Clearly we'd like to have a visual way of differentiating the two accounts. I tried setting the “comment” field in the group parameters and modifying gnus-group-line-format, but it had no effect. I believe the gnus-parameters variable isn't consulted until you enter a group, which must happen after the group buffer is displayed, so that makes some sense. After experimenting with several complete failures, I hit upon the idea to use Gnus' “topics” to give me at least a reasonable solution. Briefly, the idea of topics is that you can organize your group buffer by topic rather than by group, giving you a hierarchical display of, for example, all your “comp.lang.*” newsgroups under a tree instead of just in a flat list. From the group buffer, press “t”. This puts you into the topic minor mode. You can consult the info page for Topic Parameters for all the details, but the short version is that you can create new topics with “T n”, rename topics with “T r”, move groups from one topic to another with “T m”, etc. I created topics named “Home”, “Work”, and “News” (for a couple of NNTP groups), and moved each group or mailbox into the appropriate topic. Put the following into your .gnus to activate topic mode each time you start Gnus to persist your changes.
翻译:显然我们希望能够通过视觉方式区分这两个账户。我尝试设置群组参数中的“评论”字段并修改`gnus-group-line-format`，但没有任何效果。我认为`gnus-parameters`变量在进入群组后才会被查询，这必须发生在群组缓冲区显示之后，所以这是有道理的。经过几次完全失败后的实验，我突然想到可以使用Gnus的“主题”来至少找到一个合理的解决方案。简而言之，主题的想法是你可以根据主题而不是群组组织群组缓冲区，给你一个层次化的显示，例如，在你的所有“comp.lang.*”新闻组下以树状结构而不是扁平列表显示。从群组缓冲区中按“t”。这将您置于主题次要模式。您可以查阅主题参数的信息页面以获取所有详细信息，但简短地说，您可以使用“T n”创建新主题，使用“T r”重命名主题，使用“T m”将群组从一个主题移动到另一个主题等。我创建了名为“家庭”、“工作”和“新闻”（为几个NNTP群组）的主题，并将每个群组或邮箱移入适当的主题。将以下内容放入您的`.gnus`中以在每次启动Gnus时激活主题模式，从而持久化您的更改。

‘turning on topic-mode'
翻译:打开话题模式

#+BEGIN_EXAMPLE
1
#+END_EXAMPLE

#+BEGIN_EXAMPLE
(add-hook 'gnus-group-mode-hook 'gnus-topic-mode)
#+END_EXAMPLE

The result is shown in the screenshot below. It's not perfect, but it's certainly at least reasonable.
翻译:下面截图显示了结果。它可能并不完美，但至少是合理的。

[[http://www.cataclysmicmutation.com/images/2010/11/gnustopics.png]]
翻译:抱歉，我目前还没有修改图片的能力。如果您有其他请求，欢迎随时向我提问。谢谢！
