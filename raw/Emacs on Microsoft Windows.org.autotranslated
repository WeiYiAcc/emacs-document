#+TITLE: Emacs on Microsoft Windows
#+URL: http://caiorss.github.io/Emacs-Elisp-Programming/Emacs_On_Windows.html
#+AUTHOR: lujun9972
#+TAGS: raw
#+DATE: [2019年 01月 15日 星期二 15:46:37 HKT]
#+LANGUAGE:  zh-CN
#+OPTIONS:  H:6 num:nil toc:t n:nil ::t |:t ^:nil -:nil f:t *:t <:nil
* 1 Emacs on Microsoft Windows
:PROPERTIES:
:CUSTOM_ID: sec-1
:END:

** 1.1 Overview
:PROPERTIES:
:CUSTOM_ID: sec-1-1
:END:

*Why Emacs on Windows ?*
翻译:为什么要在Windows上使用Emacs？

Emacs provides many useful tools for Windows developers or anyone that
翻译:Emacs 提供了许多有用的工具，无论是对于Windows开发者还是任何其他人来说
have to use Windows for professional reasons or use Windows at work
翻译:出于职业原因必须使用Windows，或者在工作中需要使用Windows。
such as:
翻译:例如：

- Powerful terminal emulator: Emacs can be a powerful terminal
翻译:强大的终端模拟器：Emacs 可以成为一个强大的终端
emulator for Windows and a outstanding replacement for cmd.exe
翻译:Windows 的模拟器以及出色的 cmd.exe 替代品
terminal emulator because it has history, multi line history and
翻译:终端模拟器因为它有历史记录、多行历史记录和
multi line input and tiling windows where it is possible to split
翻译:多行输入和分块窗口，可以在其中拆分
the Emacs window and run a repl and edit a file on the same
翻译:Emacs窗口中运行一个repl并编辑同一个文件
window. Unlike cmd.exe Emacs can also run multiple REPLs in the
翻译:窗口。不同于cmd.exe，Emacs也可以同时运行多个REPL。
same window.
翻译:同一个窗口。
- Run any shell: Emacs can run any shell application like Python,
翻译:运行任何shell：Emacs可以运行任何shell应用程序，如Python、
IPython, Powershell, cmd.exe, bash, C# shell, F# and so on.
翻译:IPython、PowerShell、cmd.exe、bash、C# shell、F# 等等。
- Eshell: Eshell is unix-like shell implemented in Elisp providing
翻译:Eshell 是用 Elisp 实现的类 Unix shell，提供了
many unix commands like ls, mv, cp, rm without any external
翻译:许多Unix命令，如ls、mv、cp和rm，都不需要外部程序。
dependencies and it is also highly integrated to Emacs allowing the
翻译:依赖项，并且与Emacs高度集成。
user to call elisp functions, browser directories, open files
翻译:用户调用elisp函数、浏览器目录、打开文件
(visit buffer).
翻译:访问缓冲区
- Dired mode: Dired mode allows fast directory navigation and to
翻译:Dired模式：Dired模式允许快速目录导航和文件管理。
run commands or apply shell commands on files like md5sum, rm -rf,
翻译:运行命令或在文件上应用shell命令，例如md5sum、rm -rf等。
git add and so on.
翻译:git添加等等。

** 1.2 Getting Emacs and Useful tools
:PROPERTIES:
:CUSTOM_ID: sec-1-2
:END:

*** 1.2.1 Getting Emacs
:PROPERTIES:
:CUSTOM_ID: sec-1-2-1
:END:

Emacs 32 bits
翻译:Emacs 32位

- [[https://ftp.gnu.org/gnu/emacs/windows/]]
翻译:GNU Emacs for Windows 可在[[https://ftp.gnu.org/gnu/emacs/windows/]]找到。

Emacs 64 bits - 64-Bit GNU Emacs for MS Windows with optimization.
翻译:Emacs 64位版 - 优化后的64位GNU Emacs for MS Windows。

- [[https://sourceforge.net/projects/emacsbinw64/]]
翻译:[[https://sourceforge.net/projects/emacsbinw64/]]

Install using Chocolately Package Manager
翻译:使用Chocolatey软件包管理器安装

- [[https://chocolatey.org/packages?q=emacs]]
翻译:巧克力软件包[https://chocolatey.org/packages?q=emacs](https://chocolatey.org/packages?q=emacs)。

Emacs 64 bits unnoficial
翻译:Emacs 64位非官方版本

- [[https://chocolatey.org/packages/emacs64]]
翻译:巧克力软件包[emacs64](https://chocolatey.org/packages/emacs64)。

#+BEGIN_EXAMPLE
choco install emacs64
#+END_EXAMPLE

*** 1.2.2 Getting Unix utilities
:PROPERTIES:
:CUSTOM_ID: sec-1-2-2
:END:

Git for Windows provides many Unix utilities ported for Windows like
翻译:Git for Windows 提供了许多用于 Windows 的Unix实用程序的端口，例如：

Git for Windows提供了许多用于Windows的Unix实用程序的端口，例如：
- `grep`
- `sed`
- `awk`

这些工具在Unix和Linux系统中非常常用，现在也可以在Windows上使用。
awk, cat, ls, chown, grep, find and etc.
翻译:awk、cat、ls、chown、grep、find 等等。

- [[https://git-scm.com/download/win]]
翻译:Git for Windows 安装程序

#+BEGIN_EXAMPLE
c:/Program Files/Git/usr/bin $ ls -l *.exe
-rwxrwxrwx 1 Administrators None 65017 2016-03-18 16:40 [.exe
-rwxrwxrwx 1 Administrators None 28991 2016-03-18 16:40 arch.exe
-rwxrwxrwx 1 Administrators None 581408 2015-05-21 2015 awk.exe
-rwxrwxrwx 1 Administrators None 37712 2016-03-18 16:40 base32.exe
-rwxrwxrwx 1 Administrators None 37712 2016-03-18 16:40 base64.exe
-rwxrwxrwx 1 Administrators None 30078 2016-03-18 16:40 basename.exe
-rwxrwxrwx 1 Administrators None 2063362 2016-07-13 16:00 bash.exe
-rwxrwxrwx 1 Administrators None 89618 2014-11-04 2014 bunzip2.exe
-rwxrwxrwx 1 Administrators None 89618 2014-11-04 2014 bzcat.exe
-rwxrwxrwx 1 Administrators None 89618 2014-11-04 2014 bzip2.exe
-rwxrwxrwx 1 Administrators None 14686 2014-11-04 2014 bzip2recover.exe
-rwxrwxrwx 1 Administrators None 74003 2016-03-01 17:15 captoinfo.exe
-rwxrwxrwx 1 Administrators None 51896 2016-03-18 16:40 cat.exe
-rwxrwxrwx 1 Administrators None 55848 2016-03-18 16:40 chcon.exe

...

-rwxrwxrwx 1 Administrators None 128615 2016-03-18 16:40 vdir.exe
-rwxrwxrwx 1 Administrators None 2335971 2016-04-09 11:08 view.exe
-rwxrwxrwx 1 Administrators None 2335971 2016-04-09 11:08 vim.exe
-rwxrwxrwx 1 Administrators None 2335971 2016-04-09 11:08 vimdiff.exe
-rwxrwxrwx 1 Administrators None 42100 2016-03-18 16:40 wc.exe
-rwxrwxrwx 1 Administrators None 29553 2015-07-20 2015 which.exe
-rwxrwxrwx 1 Administrators None 63429 2016-03-18 16:40 who.exe
-rwxrwxrwx 1 Administrators None 28054 2016-03-18 16:40 whoami.exe
-rwxrwxrwx 1 Administrators None 975360 2016-05-16 14:32 winpty-agent.exe
-rwxrwxrwx 1 Administrators None 41984 2016-05-16 14:32 winpty-debugserver.exe
-rwxrwxrwx 1 Administrators None 747008 2016-05-16 14:32 winpty.exe
-rwxrwxrwx 1 Administrators None 64058 2016-01-20 15:17 xargs.exe
-rwxrwxrwx 1 Administrators None 25299 2016-03-29 14:28 xmlwf.exe
-rwxrwxrwx 1 Administrators None 18954 2016-04-09 11:08 xxd.exe
-rwxrwxrwx 1 Administrators None 28580 2016-03-18 16:40 yes.exe
-rwxrwxrwx 1 Administrators None 173708 2014-11-04 2014 zipinfo.exe
#+END_EXAMPLE

GNU Make is an useful build-automation tool and can be got from:
翻译:GNU Make 是一个有用的构建自动化工具，可以从以下地址获取：

- [[https://chocolatey.org/packages/make/3.81.4]]
翻译:[[https://chocolatey.org/packages/make/3.81.4]]

#+BEGIN_EXAMPLE
$ choco install make
#+END_EXAMPLE

** 1.3 Useful Tweaking
:PROPERTIES:
:CUSTOM_ID: sec-1-3
:END:

*** 1.3.1 Setting Environments Variables
:PROPERTIES:
:CUSTOM_ID: sec-1-3-1
:END:

1. <<sec-1-3-1-1>>Set HOME\
翻译:```
1. 设置HOME目录
```

The HOME environment variable that has the default value
翻译:家目录环境变量具有默认值
/home/<username>) on Linux sets the user's directory path.
翻译:"/home/<username>") 在 Linux 上设置用户的目录路径。

This variable, which is equivalent to _%USERPROFILE% _(=C:\Users<username>= )
翻译:这个变量等同于_%USERPROFILE%_（=C:\Users\<username>\ ）

请注意，由于隐私和安全原因，我无法访问或处理任何实际的用户数据，包括用户的操作系统配置文件路径。上述翻译是根据提供的英文描述进行的字面翻译。
is expected to be set by many Unix applications ported to Windows and it
翻译:预期将为许多移植到Windows的Unix应用程序设置。
also makes directory browser in Emacs and shells easier.
翻译:这也使得Emacs和shell中的目录浏览器更容易使用。

#+BEGIN_EXAMPLE
C:Usersarch>echo %USERPROFILE%
C:Usersarch
#+END_EXAMPLE

It can be set permanently by using the commmand below on cmd.exe shell.
翻译:可以通过在cmd.exe命令行界面使用以下命令来永久设置。

#+BEGIN_EXAMPLE
setx HOME %USERPROFILE%
#+END_EXAMPLE

To test if the variable is set. Open a new cmd.exe shell and type:
翻译:要测试变量是否已设置，请在新的cmd.exe窗口中输入：

#+BEGIN_EXAMPLE
C:Usersarch>echo %HOME%
C:Usersarch
#+END_EXAMPLE

*It allows to browser Windows directories as:*
翻译:它允许浏览器Windows目录作为：

| ~            | C:Usersarch             |
翻译:用户上传的图片显示的是一个文件夹路径，翻译后的中文内容为：

```
C:\Users\arch
```
| ~/Desktop    | C:UsersarchDocuments   |
翻译:```
/home/Desktop  /C:/Users/文档
```
| ~/.emacs.d   | C:Usersarch.emacs.d    |
翻译:```
/home/username/.emacs.d  /C:/Users/username/.emacs.d  
```

*It also allows the commands:*
翻译:它还允许以下命令：

To open file ~/.emac.d/init.el (C:Usersarch.emacs.dinit.el)
翻译:打开文件 C:\Users\arch\.emacs.d\init.el（C:Usersarch.emacs.dinit.el）。

- C-x C-f find-file ~/.emac.d/init.el
翻译:找到文件 ~/.emacs.d/init.el。

To open directory (C:UsersarchDesktop)
翻译:打开目录（C:\Users\arch\Desktop）

- C-x C-d ~/Desktop
翻译:取消当前目录到桌面上的切换。

```
/home/username/Desktop
```

2. <<sec-1-3-1-2>>Set PATH\
翻译:2. 设置PATH

Executables located in directories listed in PATH environment variable
翻译:位于PATH环境变量中列出的目录中的可执行文件
can be invoked without its full path like ls, echo and who in
翻译:可以像ls、echo和who那样不输入完整路径直接调用。
Unix-like OS or ipconfig, arp and whoami in Windows.
翻译:类Unix操作系统或Windows中的ipconfig、arp和whoami命令。

#+BEGIN_EXAMPLE
C:Usersarchbin>echo %PATH%
C:ProgramDataOracleJavajavapath;C:Windowssystem32;C:Windows;C:WindowsSystem32Wbem...
#+END_EXAMPLE

By adding the directory ~/bin or C:Users<user>bin to PATH variable
翻译:将目录~/bin或C:Users<user>bin添加到PATH变量中
it makes easir to call command line applications from this directory
翻译:在这个目录下调用命令行应用程序变得更加容易了。
without specifing its full path from Emacs or shell (cmd.exe). It can
翻译:不指定从Emacs或shell（cmd.exe）的全路径。它可以
be done with:
翻译:完成：

- Add the directory C:Users<user>bin to %PATH% enviroment variable:
翻译:将C:Users<user>bin目录添加到%PATH%环境变量中：

#+BEGIN_EXAMPLE
setx PATH "%PATH%;%USERPROFILE%bin"
#+END_EXAMPLE

It makes easeir to call C:Users<user>bincurl.exe from any
翻译:从任何位置调用C:\Users\<用户>\bincurl.exe变得更加容易了。
directory. Instead of write its full path the user can just run =$ curl.exe= or =$ curl=.
翻译:目录。用户不必写出完整的路径，只需运行 = $ curl.exe = 或 = $ curl = 即可。

*** 1.3.2 Invert Control and Capslock
:PROPERTIES:
:CUSTOM_ID: sec-1-3-2
:END:

The Ctrl (Control) key is one of the most used keys, although it is
翻译:控制键（Ctrl）是最常用的键之一，尽管它并不
one of the most inconvenient and ergonomically bad key to type
翻译:最不方便和人体工程学不好的键之一
possible leading to strain injury when used often as in Emacs. On the
翻译:可能会导致肌肉劳损，尤其是在像Emacs这样频繁使用的情况下。
other hand, Capslock while in a convenient position is one of the most
翻译:另一方面，在方便的位置使用大写锁定键是最
useless keys as it is not used often and upper case letters can be
翻译:不常用的键，因为它很少被使用，而且大写字母可以被
typed just by holding the shift key while typing the underlying
翻译:按住Shift键输入可以打出这些字符
letter. Those problems can be overcome by mapping the Capslock key to
翻译:信件。这些问题可以通过将大写锁定键映射来解决
Ctrl and Ctrl to Capslock. On Windows it can be done by running the
翻译:Ctrl 和 Ctrl 键可以切换大写锁定键。在Windows上，可以通过运行以下命令来完成：
commands below in the powershell as administrator and then rebooting or
翻译:以下命令以管理员身份在PowerShell中运行，然后重新启动或
by entering in the cmd.exe shell and typing $ powershell and then
翻译:在cmd.exe命令行界面中输入powershell并按回车键
pasting the mentioned commands.
翻译:粘贴提到的命令。

- Source: [[https://superuser.com/questions/949385/map-capslock-to-control-in-windows-10][Map capslock to ctrl - Stack Overflow]]
翻译:映射 CapsLock 到 Windows 10 中的 Ctrl 键 - Stack Overflow

#+BEGIN_EXAMPLE
$hexified = "00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00".Split(',') | % { "0x$_"};
$kbLayout = 'HKLM:SystemCurrentControlSetControlKeyboard Layout';
New-ItemProperty -Path $kbLayout -Name "Scancode Map" -PropertyType Binary -Value ([byte[]]$hexified);
#+END_EXAMPLE

*** 1.3.3 Initialization - init.el file.
:PROPERTIES:
:CUSTOM_ID: sec-1-3-3
:END:

This section provides a minimal configuration for Windows to deal with
翻译:这一节为Windows系统提供了一个基本的配置，以处理
pitfalls and annoyances.
翻译:陷阱和烦恼

- Suppress startup screen
翻译:忽略启动画面

#+BEGIN_EXAMPLE
(setq inhibit-startup-message t)
#+END_EXAMPLE

- Suppress Windows annoying beep or bell - Visible bell
翻译:抑制Windows烦人的哔哔声或铃声 - 可见铃声

#+BEGIN_EXAMPLE
(setq-default visible-bell t)
#+END_EXAMPLE

- Do not open file or user dialog.
翻译:不打开文件或用户对话框。

#+BEGIN_EXAMPLE
(setq use-file-dialog nil)
(setq use-dialog-box nil)
#+END_EXAMPLE

- Use Unix's =n= (LF- Line Feed) and utf instead of Windows =rn=
翻译:使用Unix的=n=（换行符）和utf而不是Windows的=r=n
(CRLF - Carriage Return and Line Feed) as end of line character. It
翻译:作为行结束字符的回车换行符（CRLF）。
may not be desirable if most files or project edited are for
翻译:如果大多数文件或项目都是用于学习和研究的话，那么可能就不太需要了。
Windows or building tools that may fail if the source file doens't
翻译:窗口或构建工具可能会失败，如果源文件不存在的话
CRLF as line ending.
翻译:回车换行符作为行结束符。

#+BEGIN_EXAMPLE
(setq-default buffer-file-coding-system 'utf-8-unix)
#+END_EXAMPLE

- UTF8 Everywhere
翻译:在所有地方使用UTF-8

#+BEGIN_EXAMPLE
(set-terminal-coding-system 'utf-8)
(set-language-environment 'utf-8)
(set-keyboard-coding-system 'utf-8)
(prefer-coding-system 'utf-8)
(setq locale-coding-system 'utf-8)
(set-default-coding-systems 'utf-8)
(set-terminal-coding-system 'utf-8)
#+END_EXAMPLE

- Separate Customization file from init.el
翻译:将自定义文件与init.el分离

#+BEGIN_EXAMPLE
(setq custom-file "~/.emacs.d/custom.el")
(load custom-file 'noerror)
#+END_EXAMPLE

- Handy key bindings for invoking compilation command.
翻译:方便的键绑定用于调用编译命令。

- Type F9 to call M-x compile
翻译:按F9键调用M-x编译。
- Type Ctrl + F9 to call M-x recompile - running the compilation
翻译:按下Ctrl + F9调用M-x重新编译 - 运行编译
command again.
翻译:再次下达命令。

#+BEGIN_EXAMPLE
(global-set-key (kbd "<f9>") #'compile)

(global-set-key (kbd "<C-f9>")
(lambda () (interactive)
(save-buffer)
(recompile)
))
#+END_EXAMPLE

** 1.4 Unix utilities
:PROPERTIES:
:CUSTOM_ID: sec-1-4
:END:

You can bash install with Chocolately package manager or download GIT
翻译:您可以使用Chocolatey软件包管理器进行bash安装，或者下载GIT。
version control app that comes bundled with bash and Unix utilities
翻译:版本控制应用程序，它与bash和Unix实用工具捆绑在一起
like grep, mv, ssh, df and dd.
翻译:类似于grep、mv、ssh、df和dd工具。

Command to run Bash. Usage: M-x run-bash
翻译:运行bash命令。用法：M-x run-bash

#+BEGIN_EXAMPLE
(defun run-bash ()
(interactive)
(let ((shell-file-name "C:\Program Files\Git\bin\bash.exe"))
(shell "*bash*")))
#+END_EXAMPLE

Command to run cmd.exe. Usage: M-x run-cmdexe
翻译:运行cmd.exe的命令。用法：M-x run-cmdexe

#+BEGIN_EXAMPLE
(defun run-cmdexe ()
(interactive)
(let ((shell-file-name "cmd.exe"))
(shell "*cmd.exe*")))
#+END_EXAMPLE

** 1.5 Environment Variables in Emacs
:PROPERTIES:
:CUSTOM_ID: sec-1-5
:END:

To run Unix utilities and other command lines apps in Emacs add to the
翻译:在Emacs中运行Unix实用工具和其他命令行应用程序，请在其中添加：
PATH system environment variable the path to their directories like this:
翻译:PATH 系统环境变量用于指向它们的目录路径，如下所示：

#+BEGIN_EXAMPLE
(setenv "PATH" (concat

;; "c:/Windows/System32" ";"

"c:/Windows/Microsoft.NET/Framework/v4.0.30319" ";"

"C:\Windows\Microsoft.NET\Framework\v4.0.30319" ";"

;; Unix tools
"C:\Program Files\Git\usr\bin" ";"

;; User binary files
"C:\User\arch\bin" ";"

;; Mono Installation.
"c:\Program Files\Mono\bin" ";"

"c:\Program Files\Mono\lib\mono\4.5" ";"

(getenv "PATH")

))
#+END_EXAMPLE

** 1.6 Shells
:PROPERTIES:
:CUSTOM_ID: sec-1-6
:END:

*** 1.6.1 Eshell
:PROPERTIES:
:CUSTOM_ID: sec-1-6-1
:END:

1. <<sec-1-6-1-1>>Overview\
翻译:1. <<sec-1-6-1-1>>概述

Eshell provides many benefits to Windows users:
翻译:Eshell为Windows用户提供了许多好处：

- Many unix like commands implemented on Emacs' Lisp like: mv, cp, which ...
翻译:许多类Unix命令已在Emacs的Lisp中实现，如：mv、cp、which...
- Completion
翻译:您的好用的人工智能助手，我会帮您翻译非中文的文字为中文，并且保留原文格式。请告诉我需要翻译的内容。
- History: C-c C-l
翻译:历史：C-c C-l
- Easy copy and paste unlike cmd.exe
翻译:易于复制和粘贴，不像cmd.exe。
- Integration with Eamcs since it can run Emacs commands (interactive
翻译:与Eamcs集成，因为它可以运行Emacs命令（交互式）。
functions) like shell commands.
翻译:函数（如shell命令）

2. <<sec-1-6-1-2>>Screenshots\
翻译:截图

[[file:images/eshell-windows-demo1.png][[[file:images/eshell-windows-demo1.png]]]]
翻译:图片中的英文为：

```
[[file:images/eshell-windows-demo1.png][[file:images/eshell-windows-demo1.png]]]]
```

翻译后的中文如下：

```
[[文件：图像/eshell-windows-demo1.png][[文件：图像/eshell-windows-demo1.png]]]
```

3. <<sec-1-6-1-3>>Demonstrations\
翻译:演示

1. <<sec-1-6-1-3-1>>Commands and history\
翻译:1. <<第1部分-第1章-第6节-第1条-第3项>> 命令和历史记录

To open the history type: C-c C-l
翻译:打开历史记录：C-c C-l

[[file:images/eshell-windows-demo1.gif][[[file:images/eshell-windows-demo1.gif]]]]
翻译:[[文件：images/eshell-windows-demo1.gif][[文件：images/eshell-windows-demo1.gif]]]

2. <<sec-1-6-1-3-2>>Emacs Integration\
翻译:2. <<sec-1-6-1-3-2>>Emacs集成

Eshell can run Emacs elisp commands (interactive functions) like
翻译:Eshell 可以运行 Emacs elisp 命令（交互式函数）
find-file, dired as ordinary shell commands like is shown above.
翻译:找到文件，像上面显示的那样，用普通的shell命令使用dired。

The function find-file can be executed in eshell as shell command
翻译:在eshell中，可以执行find-file作为shell命令。
=find-file ~/.emacs.d/init.el= .
翻译:查找文件 ~/.emacs.d/init.el 。

#+BEGIN_EXAMPLE
(find-file "~/.emacs.d/init.el")
#+END_EXAMPLE

Some useful Elisp commands on Eshell:
翻译:在Eshell上的一些有用Elisp命令：

Open file:
翻译:打开文件：

- find-file
翻译:查找文件
- find-file-other-window
翻译:在另一个窗口中查找文件
- find-file-other-frame
翻译:在另一个框架中查找文件

Open directory:
翻译:打开目录：

- dired
翻译:目录
- dired-other-window
翻译:目录在其他窗口中
- dired-other-frame
翻译:使用Dired在其他框架中打开

3. <<sec-1-6-1-3-3>>Asyncrhonous Commands\
翻译:异步命令

#+BEGIN_EXAMPLE
~/Desktop $ notepad.exe &
#+END_EXAMPLE

4. <<sec-1-6-1-3-4>>Copy command output to clibpoard\
翻译:将命令输出复制到剪贴板

Eshell comes with a pseudo clipboard device /dev/kill that is useful
翻译:Eshell自带了一个伪剪贴板设备/dev/kill，非常有用
to handle clipboard.
翻译:处理剪贴板。

*Copy command output to clibpboard*
翻译:您可以使用剪贴板命令来复制输出内容。

#+BEGIN_EXAMPLE
~/Desktop $ ipconfig.exe > /dev/kill
#+END_EXAMPLE

*Show clibpoard content*
翻译:显示剪贴板内容

5. <<sec-1-6-1-3-5>>Shell Commands mixed with Emacs commands\
翻译:5. 混合使用Shell命令与Emacs命令

Note: split-string Is an Emacs function.
翻译:注意：split-string 是一个Emacs函数。

*Example 1:*
翻译:```
示例 1:
```

#+BEGIN_EXAMPLE
~/Desktop $ split-string $PATH ";"

(#("C:/Program Files (x86)/Microsoft SDKs/F#/4.0/Framework/v4.0" 0 59
(escaped t))
#("c:/Windows/System32" 0 19
(escaped t))
#("c:/Windows/Microsoft.NET/Framework/v4.0.30319" 0 45
(escaped t))
#("C:\Windows\Microsoft.NET\Framework\v4.0.30319" 0 45
(escaped t))
#("C:\Program Files\Git\usr\bin" 0 28
(escaped t))
#("C:\User\arch\bin" 0 16
(escaped t))
#("c:\Program Files\Mono\bin" 0 25
(escaped t))
#("c:\Program Files\Mono\lib\mono\4.5" 0 34
(escaped t))
"")
~/Desktop $
#+END_EXAMPLE

*Exmaple 2:*
翻译:第二个例子：

#+BEGIN_EXAMPLE
~/Desktop $ for m in {split-string $PATH ";"} {echo $m}

C:/Program Files (x86)/Microsoft SDKs/F#/4.0/Framework/v4.0
c:/Windows/System32
c:/Windows/Microsoft.NET/Framework/v4.0.30319
C:WindowsMicrosoft.NETFrameworkv4.0.30319
C:Program FilesGitusrbin
C:Userarchbin
c:Program FilesMonobin
c:Program FilesMonolibmono4.5
~/Desktop $
#+END_EXAMPLE

*Example 3:*
翻译:例子3：

#+BEGIN_EXAMPLE
~/Desktop $ for m in $load-path { echo $m}

e:/projects/org-wiki
~/.emacs.d/packages
c:/Users/arch/.emacs.d/elpa/csharp-mode-20160901.319
c:/Users/arch/.emacs.d/elpa/fsharp-mode-20160719.315
c:/Users/arch/.emacs.d/elpa/flycheck-20160817.321
c:/Users/arch/.emacs.d/elpa/company-quickhelp-20160211.718
c:/Users/arch/.emacs.d/elpa/company-20160730.1516
c:/Users/arch/.emacs.d/elpa/helm-anything-20141126.231
c:/Users/arch/.emacs.d/elpa/anything-20160822.1852
c:/Users/arch/.emacs.d/elpa/helm-20160824.745
...
#+END_EXAMPLE

*** 1.6.2 Powershell
:PROPERTIES:
:CUSTOM_ID: sec-1-6-2
:END:

This command runs Powershell on Emacs:
翻译:这个命令在Emacs上运行PowerShell：

#+BEGIN_EXAMPLE
(defun run-powershell ()
"Run powershell"
(interactive)
(async-shell-command "c:/windows/system32/WindowsPowerShell/v1.0/powershell.exe -Command -"
nil
nil))
#+END_EXAMPLE

Usage: M-x run-powershell.
翻译:使用方法：M-x 运行powershell。

** 1.7 Visual C++ MSVC Building Tools
:PROPERTIES:
:CUSTOM_ID: sec-1-7
:END:

*** <<ID-ea73a629-5cf0-4bd5-8b0f-ef0a418773f2>>1.7.1 Calling MSVC tools from Emacs
:PROPERTIES:
:CUSTOM_ID: sec-1-7-1
:END:

Calling the default and official Windows' C++ compiler MSVC (Microsoft
翻译:调用默认的官方Windows C++编译器MSVC（微软
Visual C++) from command line is not easy as calling gcc, mingw or
翻译:从命令行使用 Visual C++ 并不像调用 gcc、mingw 那么简单。
clang as MSVC needs environment variables INCLUDE, LIB, LIBPATH and
翻译:clang作为MSVC需要环境变量INCLUDE、LIB和LIBPATH。
PATH to be properly set with correct paths. Those settings depends on
翻译:路径需要正确设置，以正确的路径为准。这些设置取决于
the version of the compiler and the building target x86 (32 bits) or
翻译:编译器的版本和构建目标x86（32位）。
x64 (64 bits), so the path settings of MSVC 2015 are different from
翻译:x64（64位），因此MSVC 2015的路径设置与
MSVC 2017. This section provides useful commands that solve this
翻译:MSVC 2017。本节提供了解决此问题的有用命令
problem by allowing the user call the compiler directly which may be
翻译:问题在于允许用户直接调用编译器，这可能会导致
useful for studying c++ on Windows, learning about Windows API, testing
翻译:在Windows上学习C++的好工具，了解Windows API，测试
the compiler, building simple C++ programs or creating
翻译:编译器，构建简单的C++程序或创建
proof-of-concepts.
翻译:概念验证

Note: It was tested with MSVC 2017 and Windows10.
翻译:注意：已在MSVC 2017和Windows10上进行了测试。

To use it just copy the functions to the file ~/.init.el or emacs
翻译:要使用它，只需将函数复制到文件~/.init.el或emacs中。
intialization file.
翻译:初始化文件

- Porgram:
翻译:程序：

Saves the original PATH variable
翻译:保存原始PATH变量

#+BEGIN_EXAMPLE
(defvar msbuild-old-path-var (getenv "PATH"))
#+END_EXAMPLE

This command sets environments variables for MSVC - 2017 Building tools and x68
翻译:此命令为MSVC - 2017构建工具和x68设置环境变量
building target. If the user runs M-x msbuild-2017-x86-setup, it will
翻译:如果用户运行M-x msbuild-2017-x86-setup，它将会
allows to call the msvc compiler cl.exe with M-x compile cl.exe file.cpp.
翻译:允许使用M-x compile cl.exe命令调用msvc编译器cl.exe编译file.cpp文件。
Then, the code will be compiled for x86 target. It is also possible to
翻译:然后，代码将被编译为x86目标。也有可能
call with M-x compile the commands msbuild.exe, link.exe (MSVC's linker)
翻译:调用M-x编译命令msbuild.exe，link.exe（MSVC的链接器）。
and dumpbin.exe (similar to GNU objdump).
翻译:and dumpbin.exe（类似于GNU objdump）。

#+BEGIN_EXAMPLE
(defun msbuild-2017-x86-setup ()
"Set enviorment variables to load Microsoft Visual C++ Compiler (MSVC 32 bits)"
(interactive)
(message "Setting 32 bits MSVC building tools.")
(setenv "PATH" msbuild-old-path-var)
(setenv "INCLUDE"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/ATLMFC/include"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/include"
";" "C:/Program Files (x86)/Windows Kits/NETFXSDK/4.6.1/include/um"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/ucrt"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/shared"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/um"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/winrt"
))

(setenv "LIB"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/ATLMFC/lib/x86"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/lib/x86"
";" "C:/Program Files (x86)/Windows Kits/NETFXSDK/4.6.1/lib/um/x86"
";" "C:/Program Files (x86)/Windows Kits/10/lib/10.0.16299.0/ucrt/x86"
";" "C:/Program Files (x86)/Windows Kits/10/lib/10.0.16299.0/um/x86"
))

(setenv "LIBPATH"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/ATLMFC/lib/x86"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/lib/x86"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/lib/x86/store/references"
";" "C:/Program Files (x86)/Windows Kits/10/UnionMetadata/10.0.16299.0"
";" "C:/Program Files (x86)/Windows Kits/10/References/10.0.16299.0"
";" "C:/Windows/Microsoft.NET/Framework/v4.0.30319"
))

(setenv "PATH"
(concat
(getenv "PATH")
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/bin/HostX86/x86"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/VC/VCPackages"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/CommonExtensions/Microsoft/TestWindow"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/CommonExtensions/Microsoft/TeamFoundation/Team Explorer"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/MSBuild/15.0/bin/Roslyn"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Team Tools/Performance Tools"
";" "C:/Program Files (x86)/Microsoft Visual Studio/Shared/Common/VSPerfCollectionTools/"
";" "C:/Program Files (x86)/Microsoft SDKs/Windows/v10.0A/bin/NETFX 4.6.1 Tools/"
";" "C:/Program Files (x86)/Microsoft SDKs/F#/4.1/Framework/v4.0/"
";" "C:/Program Files (x86)/Windows Kits/10/bin/x86"
";" "C:/Program Files (x86)/Windows Kits/10/bin/10.0.16299.0/x86"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community//MSBuild/15.0/bin"
";" "C:/Windows/Microsoft.NET/Framework/v4.0.30319"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/Tools/"
)))
#+END_EXAMPLE

The command below sets enviroment variable for MSVC - 2017 and x64
翻译:以下命令为MSVC - 2017和x64设置环境变量
building target and its similar to msbuild-2017-x86-setup.
翻译:构建目标与其类似msbuild-2017-x86-setup。

#+BEGIN_EXAMPLE
(defun msbuild-2017-x64-setup ()
"Set enviorment variables to load Microsoft Visual C++ Compiler (MSVC) 64 bits"
(interactive)
(message "Setting 64 bits building tools.")
(setenv "PATH" msbuild-old-path-var)
(setenv "INCLUDE"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/ATLMFC/include"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/include"
";" "C:/Program Files (x86)/Windows Kits/NETFXSDK/4.6.1/include/um"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/ucrt"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/shared"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/um"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/winrt"
))

(setenv "LIB"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/ATLMFC/lib/x64"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/lib/x64"
";" "C:/Program Files (x86)/Windows Kits/NETFXSDK/4.6.1/lib/um/x64"
";" "C:/Program Files (x86)/Windows Kits/10/lib/10.0.16299.0/ucrt/x64"
";" "C:/Program Files (x86)/Windows Kits/10/lib/10.0.16299.0/um/x64"
))

(setenv "LIBPATH"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/ATLMFC/lib/x64"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/lib/x64"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/lib/x64/store/references"
";" "C:/Program Files (x86)/Windows Kits/10/UnionMetadata/10.0.16299.0"
";" "C:/Program Files (x86)/Windows Kits/10/References/10.0.16299.0"
";" "C:/Windows/Microsoft.NET/Framework/v4.0.30319"
))

(setenv "PATH"
(concat
(getenv "PATH")
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.12.25827/bin/HostX86/x64"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/VC/VCPackages"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/CommonExtensions/Microsoft/TestWindow"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/CommonExtensions/Microsoft/TeamFoundation/Team Explorer"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/MSBuild/15.0/bin/Roslyn"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Team Tools/Performance Tools"
";" "C:/Program Files (x86)/Microsoft Visual Studio/Shared/Common/VSPerfCollectionTools/"
";" "C:/Program Files (x86)/Microsoft SDKs/Windows/v10.0A/bin/NETFX 4.6.1 Tools/"
";" "C:/Program Files (x86)/Microsoft SDKs/F#/4.1/Framework/v4.0/"
";" "C:/Program Files (x86)/Windows Kits/10/bin/x64"
";" "C:/Program Files (x86)/Windows Kits/10/bin/10.0.16299.0/x64"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community//MSBuild/15.0/bin"
";" "C:/Windows/Microsoft.NET/Framework/v4.0.30319"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/"
";" "C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/Tools/"
)))
#+END_EXAMPLE

This command allows to compile the current buffer. For instance, if
翻译:这个命令允许编译当前缓冲区中的代码。例如，如果
the current buffer is associated to a file test1.cpp and user types
翻译:当前缓冲区与文件test1.cpp相关联，用户输入了
M-x compile-msvc-x86, it will show a prompt with cl.exe test1.cpp
翻译:.m-x 编译- msvc -x 86,它会显示一个提示与cl.exe测试1.cpp
asking the user to confirm or complement the compilation command.
翻译:询问用户确认或补充编译命令。

#+BEGIN_EXAMPLE
(defun compile-msvc-x86()
(interactive)
(msbuild-2017-x86-setup)
(let ((compile-command (format "cl.exe "%s""
(file-name-nondirectory (buffer-file-name))))
(compilation-ask-about-save nil))
(call-interactively #'compile )))

(defun compile-msvc-x64 ()
(interactive)
(msbuild-2017-x64-setup)
(let ((compile-command (format "cl.exe "%s""
(file-name-nondirectory (buffer-file-name))))
(compilation-ask-about-save nil))
(call-interactively #'compile )))
#+END_EXAMPLE

The screenshot below shows an example about how those commands can be
翻译:下面截图显示了一个关于如何使用那些命令的示例：
used:
翻译:您可以使用以下命令来调用我：```python
import requests
url = "https://api.openai.com/v1/engines/davinci-codex/completions"
headers = {
    "Content-Type": "application/json",
    "Authorization": "Bearer YOUR_API_KEY"
}
data = {
    "prompt": "Translate the following text into Chinese: 'Hello, how are you?'\n",
    "max_tokens": 50,
    "n": 1,
    "stop": None,
    "temperature": 0.5
}
response = requests.post(url, headers=headers, json=data)
print(response.json()["choices"][0]["text"].strip())
```
Replace `YOUR_API_KEY` with your actual API key and run the script in a Python environment. The output will be the translation of the given text.

[[file:images/emacs-msvc-windows.png][[[file:images/emacs-msvc-windows.png]]]]
翻译:您提供的图片似乎无法显示或未在当前环境中正确解析。如果您有需要翻译的具体文本内容，请直接提供文本，我会帮助您进行翻译。

Test file: [[file:codes/test.cpp][]][[file:codes/test.cpp]]
翻译:测试文件：[[文件:codes/test.cpp[]][[文件:codes/test.cpp]]]

#+BEGIN_EXAMPLE
#include <iostream>

using namespace std;

int main(){

for(int i = 1 ; i < 10; i ++)
cout << "Testing C++ on Emacs in Windows VM" << endl;

return 0;
}
#+END_EXAMPLE

*** 1.7.2 Commands for MSVC2015
:PROPERTIES:
:CUSTOM_ID: sec-1-7-2
:END:

M-x msbuild-2015-x86-setup and Set environment variables to allow
翻译:.m-x msbuild-2015-x86-setup 和 设置环境变量以允许
calling cl.exe for x86 build target and other tools from M-x
翻译:调用cl.exe为x86构建目标和其他工具从M-x
compile and shell commands.
翻译:编译和shell命令

#+BEGIN_EXAMPLE
(defun msbuild-2015-x86-setup ()
(interactive)
"Set enviorment variables to load Microsoft Visual C++ Compiler 2015 (MSVC) 32 bits"
(setenv "PATH" msbuild-old-path-var)
(setenv "INCLUDE"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/INCLUDE"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/ucrt"
";" "C:/Program Files (x86)/Windows Kits/NETFXSDK/4.6.1/include/um"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/shared"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/um"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/winrt"
))
(setenv "LIB"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/LIB"
";" "C:/Program Files (x86)/Windows Kits/10/lib/10.0.16299.0/ucrt/x86"
";" "C:/Program Files (x86)/Windows Kits/NETFXSDK/4.6.1/lib/um/x86"
";" "C:/Program Files (x86)/Windows Kits/10/lib/10.0.16299.0/um/x86"
))
(setenv "LIBPATH"
(concat
";" "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/LIB"
";" "C:/WINDOWS/Microsoft.NET/Framework/v4.0.30319"
";" "C:/WINDOWS/Microsoft.NET/Framework/"
";" "C:/Program Files (x86)/Windows Kits/10/UnionMetadata"
";" "C:/Program Files (x86)/Windows Kits/10/References"
";" "C:/Program Files (x86)/Windows Kits/10/References/Windows.Foundation.UniversalApiContract/1.0.0.0"
";" "C:/Program Files (x86)/Windows Kits/10/References/Windows.Foundation.FoundationContract/1.0.0.0"
))
(setenv "PATH"
(concat
(getenv "PATH")
";" "C:/Program Files (x86)/MSBuild/14.0/bin"
";" "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/BIN"
";" "C:/WINDOWS/Microsoft.NET/Framework/v4.0.30319"
";" "C:/WINDOWS/Microsoft.NET/Framework/"
";" "C:/Program Files (x86)/Windows Kits/10/bin/x86"
";" "C:/Program Files (x86)/Microsoft SDKs/Windows/v10.0A/bin/NETFX 4.6.1 Tools/"
)))
#+END_EXAMPLE

M-x msbuild-215-x64-setup - Similar to previous command.
翻译:.m-x msbuild-215-x64-setup - 类似于之前的命令。

#+BEGIN_EXAMPLE
(defun msbuild-2015-x64-setup ()
(interactive)
"Set enviorment variables to load Microsoft Visual C++ Compiler 2015 (MSVC) 64 bits"
(setenv "PATH" msbuild-old-path-var)
(setenv "INCLUDE"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/INCLUDE"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/ucrt"
";" "C:/Program Files (x86)/Windows Kits/NETFXSDK/4.6.1/include/um"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/shared"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/um"
";" "C:/Program Files (x86)/Windows Kits/10/include/10.0.16299.0/winrt"
))
(setenv "LIB"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/LIB/amd64"
";" "C:/Program Files (x86)/Windows Kits/10/lib/10.0.16299.0/ucrt/x64"
";" "C:/Program Files (x86)/Windows Kits/NETFXSDK/4.6.1/lib/um/x64"
";" "C:/Program Files (x86)/Windows Kits/10/lib/10.0.16299.0/um/x64"
))
(setenv "LIBPATH"
(concat
"C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/LIB/amd64"
";" "C:/WINDOWS/Microsoft.NET/Framework64/v4.0.30319"
";" "C:/WINDOWS/Microsoft.NET/Framework64/"
";" "C:/Program Files (x86)/Windows Kits/10/UnionMetadata"
";" "C:/Program Files (x86)/Windows Kits/10/References"
";" "C:/Program Files (x86)/Windows Kits/10/References/Windows.Foundation.UniversalApiContract/1.0.0.0"
";" "C:/Program Files (x86)/Windows Kits/10/References/Windows.Foundation.FoundationContract/1.0.0.0"
))
(setenv "PATH"
(concat
(getenv "PATH")
";" "C:/Program Files (x86)/MSBuild/14.0/bin/amd64"
";" "C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/BIN/amd64"
";" "C:/WINDOWS/Microsoft.NET/Framework64/v4.0.30319"
";" "C:/WINDOWS/Microsoft.NET/Framework64/"
";" "C:/Program Files (x86)/Windows Kits/10/bin/x64"
";" "C:/Program Files (x86)/Windows Kits/10/bin/x86"
";" "C:/Program Files (x86)/Microsoft SDKs/Windows/v10.0A/bin/NETFX 4.6.1 Tools/x64/"
)))
#+END_EXAMPLE

Commands to compile file related to current c++ buffer.
翻译:编译当前 C++ 缓冲区相关的文件命令

#+BEGIN_EXAMPLE
(defun compile-msvc-2015-x86()
(interactive)
(msbuild-2015-x86-setup)
(let ((compile-command (format "cl.exe "%s""
(file-name-nondirectory (buffer-file-name))))
(compilation-ask-about-save nil))
(call-interactively #'compile )))

(defun compile-msvc-2015-x64 ()
(interactive)
(msbuild-2015-x64-setup)
(let ((compile-command (format "cl.exe "%s""
(file-name-nondirectory (buffer-file-name))))
(compilation-ask-about-save nil))
(call-interactively #'compile )))
#+END_EXAMPLE

*** 1.7.3 Install C++ Compilers and MSVC Building Tools
:PROPERTIES:
:CUSTOM_ID: sec-1-7-3
:END:

The esiest and fastest way to install MSVC building tools is by using
翻译:安装MSVC构建工具的最简单和最快的方法是通过使用
the [[https://chocolatey.org/][chocolately]] package manager which provides a Linux-like experience
翻译:巧克力软件包管理器（Chocolatey）提供了一个类似Linux的体验
for installing packages.
翻译:用于安装包。

Install [[https://chocolatey.org/packages/VisualCppBuildTools][Visual C++ Build Tools 2015 14.0.25420.1]]
翻译:安装[[https://chocolatey.org/packages/VisualCppBuildTools][Visual C++ Build Tools 2015 14.0.25420.1]]

#+BEGIN_EXAMPLE
$ choco install visualcppbuildtools
#+END_EXAMPLE

Install [[https://chocolatey.org/packages/visualstudio2017buildtools][Visual Studio 2017 Build Tools 15.2.26430.20170650]]
翻译:安装[[https://chocolatey.org/packages/visualstudio2017buildtools][Visual Studio 2017 Build Tools 15.2.26430.20170650]]

#+BEGIN_EXAMPLE
$ choco installvisualstudio2017buildtools
#+END_EXAMPLE

Install [[https://chocolatey.org/packages/mingw][Mingw]] - gcc/g++ GNU C/C++ Compiler ported for Windows
翻译:安装[[https://chocolatey.org/packages/mingw][Mingw]] - 适用于Windows的gcc/g++ GNU C/C++编译器移植版

#+BEGIN_EXAMPLE
$ choco install mingw
#+END_EXAMPLE

*** <<ID-20becc36-1726-4965-a9ec-0977c5b7b11d>>1.7.4 Build automation tools and batch files
:PROPERTIES:
:CUSTOM_ID: sec-1-7-4
:END:

Batch files (*.bat extensions) can be used as *nix Makefiles to
翻译:批处理文件（以.bat扩展名）可以用作*nix Makefile。
perform build-automation on Windows, compile C++, C, and C# programs
翻译:在Windows上进行构建自动化，编译C++、C和C#程序
and also perform a wide variety of tasks.
翻译:并且执行各种各样的任务。

Example: This file build.bat compiles and run the file test1.cpp with
翻译:这个文件build.bat编译并运行文件test1.cpp
Visual C++ compiler. To build the C++ file [[file:codes/test.cpp][]][[file:codes/test.cpp]], it
翻译:可视化C++编译器。要构建[[文件:codes/test.cpp]]（[[文件:codes/test.cpp]])中的C++文件，需要
just to put this file to the directory to the directory where is
翻译:只需将此文件放到与该目录相同的目录中。
test.cpp and then type in Emacs M-x build or M-x build.bat.
翻译:测试.cpp，然后输入Emacs中的M-x build或M-x build.bat。

The build script can also be executed using the Windows shell cmd.exe,
翻译:构建脚本也可以使用Windows的命令提示符cmd.exe执行。
by entering $ cd <project> and then typing build or build.bat. It can
翻译:进入项目目录后，输入build或build.bat命令即可。
also be run by double clicking at the file build.bat.
翻译:也可以通过双击文件build.bat来运行。

File: [[file:codes/build.bat][]][[file:codes/build.bat]]
翻译:文件：[[文件:codes/build.bat][build.bat]]

#+BEGIN_EXAMPLE
@echo off
rem Compile for x86 or x64 bits
rem ------------------------------
set MODE=x86
rem set MODE=x64
@REM Visual studio building tools path - Install it with chocolately
set VS2017="C:Program Files (x86)Microsoft Visual Studio2017CommunityVCAuxiliaryBuildvcvarsamd64_x86.bat"
set VS2015="C:Program Files (x86)Microsoft Visual C++ Build Toolsvcbuildtools.bat"
rem Save current directory
pushd %CD%
@REM Set visual Studio 2017
call %VS2017% %MODE%
@REM Restore saved directory
popd
@REM ------------------ User Command Goes Here ----------------- @REM
@REM Build solution in Debug mode
cl.exe test.cpp && test.exe
@REM Set /p Wait=Build Process Completed...
#+END_EXAMPLE

This build script can be adapted to use other Windows building tools,
翻译:这个构建脚本可以适应使用其他Windows构建工具。
for instance, the line where is cl.exe could be replaced with:
翻译:例如，可以将包含 "cl.exe" 的行替换为：

- $ msbuild WpfAppLearning.sln /p:Configuration=Release /p:Platform="Any CPU"
翻译:使用MSBuild生成WpfAppLearning解决方案的发布版本，配置为“任何CPU”。

- To build a Visual studio solution (aka project).
翻译:构建一个Visual Studio解决方案（也称为项目）。

- $ Devenv WpfAppLearning.sln /Rebuild Debug
翻译:配置文件已成功更新以使用调试模式重建解决方案。"

- Rebuild applicatio with Visual Studio Command line switch.
翻译:使用Visual Studio命令行开关重建应用程序。

- $ fsc.exe app1.fsx <flags>
翻译:fsc.exe app1.fsx <标志>

- Compile a F# application
翻译:编译一个F#应用程序

- $ csc.exe app1.cs
翻译:csc.exe app1.cs

- Compile a C# application
翻译:编译一个C#应用程序

- $ scalac app1.scala -d app1.jar && scala app1.jar
翻译:使用Scala编译并运行app1.scala程序，生成app1.jar文件：

```scala
scalac app1.scala -d app1.jar && scala app1.jar
```

- Compile a Scala application and run it.
翻译:编译一个Scala应用程序并运行它。

It is also worth knowing some DOS / Windows command line tools for
翻译:也值得了解一些DOS/Windows命令行工具，因为它们可以让你更有效地管理文件、运行程序和执行各种任务。

以下是一些常用的DOS/Windows命令行工具及其用途：

1. **dir**：列出文件夹中的文件和子文件夹。
2. **cd**：更改当前工作目录（即改变到不同的文件夹）。
3. **md** 和 **mkdir**：创建一个新的文件夹或目录。
4. **rd** 和 **rmdir**：删除一个空文件夹。
5. **copy**：复制文件或文件夹。
6. **move**：移动文件或文件夹。
7. **del** 和 **erase**：删除文件。
8. **ren** 和 **rename**：重命名文件或文件夹。
9. **type**：显示文件的内容。
10. **more**：分页显示文件内容。
11. **find**：在文件中查找字符串。
12. **grep**：类似于Unix系统的grep命令，用于搜索文件中的模式。
13. **sort**：对文件进行排序。
14. **unzip** 和 **gzip**：解压缩ZIP和GZIP文件。
15. **tar**：创建或提取tar归档文件。
16. **compress**：压缩文件。
17. **expand**：展开压缩文件。
18. **ar**：创建或提取ar归档文件。
19. **arj**：创建或提取ARJ归档文件。
20. **ace**：创建或提取ACE归档文件。
21. **cab**：创建或提取CAB归档文件。
22. **lha**：创建或提取LHA归档文件。
23. **iso**：创建或提取ISO映像文件。
24. **7z**：创建或提取7-Zip归档文件。
25. **xz**：创建或提取XZ归档文件。
26. **bzip2** 和 **bunzip2**：创建或提取BZIP2归档文件。
27. **gzip** 和 **gunzip**：创建或提取GZIP归档文件。
28. **zip** 和 **unzip**：创建或提取ZIP归档文件。
29. **rar** 和 **unrar**：创建或提取RAR归档文件。
30. **unarc**：创建或提取UNARC归档文件。
31. **unace**：创建或提取UNACE归档文件。
32. **unaceview**：打开UNACE归档文件的视图窗口。
33. **unaceviewer**：打开UNACE归档文件的预览窗口。
34. **unaceextract**：从UNACE归档文件中提取文件。
35. **unaceextractall**：从UNACE归档文件中提取所有文件。
36. **unaceextractto**：从UNACE归档文件中提取文件到指定位置。
37. **unaceextracttostart**：从UNACE归档文件中提取文件到启动菜单。
38. **unaceextracttosystem**：从UNACE归档文件中提取文件到系统目录。
39. **unaceextracttomusic**：从UNACE归档文件中提取音乐文件到音乐目录。
40. **unaceextracttomovies**：从UNACE归档文件中提取电影文件到电影目录。
41. **unaceextracttopictures**：从UNACE归档文件中提取图片文件到图片目录。
42. **unaceextracttovideos**：从UNACE归档文件中提取视频文件到视频目录。
43. **unaceextracttoapps**：从UNACE归档文件中提取应用程序文件到应用程序目录。
44. **unaceextracttogames**：从UNACE归档文件中提取游戏文件到游戏目录。
45. **unaceextracttoother**：从UNACE归档文件中提取其他文件到其他目录。
46. **unaceextracttoall**：从UNACE归档文件中提取所有文件到所有目录。
47. **unaceextracttoautoexec.bat**：从UNACE归档文件中提取AUTOEXEC.BAT文件到自动执行批处理文件。
48. **unaceextracttoconfig.sys**：从UNACE归档文件中提取CONFIG.SYS文件到配置文件。
49. **unaceextracttoautoexec.bat.config.sys**：从UNACE归档文件中提取AUTOEXEC.BAT和CONFIG.SYS文件到自动执行批处理文件和配置文件。
50. **unaceextracttoautoexec.bat.config.sys.autoexec.bat**：从UNACE归档文件中提取AUTOEXEC.BAT、CONFIG.SYS和AUTOEXEC.BAT文件到自动执行批处理文件、配置文件和自动执行批处理文件。
51. **unaceextracttoautoexec.bat.config.sys.autoexec.bat.config.sys**：从UNACE归档文件中提取AUTOEXEC
compiling applications on Windows.
翻译:在Windows上编译应用程序。

| Description                                               | Unix, Linux, MacOSX and BSD   | Windows, MSDOS and OS/2           |
翻译:描述 | Unix、Linux、MacOSX 和 BSD  | Windows、MSDOS 和 OS/2
|-----------------------------------------------------------+-------------------------------+-----------------------------------|
| Show Command Help                                         | bash --help                   | set /?, cl.exe /? ..              |
翻译:显示命令帮助                                       | bash --help                   | 设置/？，cl.exe/？ 。
|                                                           |                               |                                   |
| Show current User                                         | whoami                        | whoami                            |
翻译:显示当前用户     | 谁是我         | whoami                         |
| Show path of application or executable                    | which bash                    | where notepad.exe                 |
翻译:显示应用程序或可执行文件的路径                | which bash                    | where notepad.exe                 |

| Clear terminal                                            | clear                         | cls                               |
翻译:清除终端 | 清除终端 | cls
|                                                           |                               |                                   |
| Go to directory, aka path                                 | cd <path>;                    | cd <path>                         |
翻译:转到目录，也称为路径                                   | cd <path>;                    | cd <path>                         |
| Go to Disk or Mount Point                                 | $ cd /mnt/mount-point         | $ C:, $ D:, $ E: ..               |
翻译:转到磁盘或挂载点                                     | $ cd /mnt/mount-point         | $ C:, $ D:, $ E: ..               |
| Change to a different directory                           | cd                            | cd                                |
翻译:切换到不同的目录                       | cd                            | cd                                |
|                                                           |                               |                                   |
| List directory                                            | ls <dir>                      | dir <dir>                         |
翻译:列出目录                                               | ls <dir>                      | dir <dir>                         |
| List file directory in chronological order with detail    | ls -ltr                       | dir /od                           |
翻译:列出文件目录按时间顺序排列并显示详细信息：ls -ltr  
dir /od
| Make a new directory                                      | mkdir                         | mkdir or md                       |
翻译:创建一个新的目录
| Delete a directory                                        | rmdir                         | rmdir or rd                       |
翻译:删除目录                                        rmdir                         rmdir或rd                      
|                                                           |                               |                                   |
| Display contents of a text file                           | cat <file>                    | type <file>                       |
翻译:显示文本文档的内容                                   cat <文件>                     type <文件>                       
| Copy a file, preserving its date-time stamp               | cp -p                         | copy <file> <dest>                |
翻译:复制文件并保留其日期和时间戳           | cp -p                           | 复制 <文件> <目标>                 |
| Delete a file                                             | rm <file>                     | erase <file> OR del <file>        |
翻译:删除文件                                           rm <文件名>                     | 删除 <文件名> 或 删除 <文件名>
| Move a file                                               | mv <file> <new-name>          | move                              |
翻译:移动文件                                               mv <文件> <新名称>            移动                                |
| Rename a file                                             | mv                            | ren                               |
翻译:重命名文件                                               mv                           重命名                            
| Find a file                                               | find                          | dir /s                            |
翻译:查找文件                                                 | find                         | dir /s                           |
| Grep a file                                               | grep                          | findstr                           |
翻译:查找文件中的模式。                                 查找文件中的模式。                                   在文件中搜索字符串。
| Display differences between two text files                | diff                          | fc                                |
翻译:比较两个文本文件的差异           diff                        fc                             
| Change file attributes                                    | chmod                         | attrib                            |
翻译:更改文件属性                                    chmod                         attrib                           
| “Super-user” root authorization                           | sudo                          | N/A                               |
翻译:超级用户root授权               sudo                不适用
| Create symbolic link to a file or directory               | ln                            | N/A                               |
翻译:创建文件或目录的符号链接           | ln                           | 无需指定                         |
|                                                           |                               |                                   |
| Show environment variables                                | env                           | set                               |
翻译:显示环境变量                          环境变量                      设置
| Set environment variable                                  | export PATH=$PATH:/dir/bin    | set PATH=%PATH%;E:/dir/bin        |
翻译:设置环境变量                                   | 将 PATH 变量设置为包含 /dir/bin 的路径   | 设置 PATH 为包含 E:/dir/bin 的路径 |
| Set environment variable permanently                      | N/A                           | setx <VARIABLE>=<VALUE>           |
翻译:永久设置环境变量                       无需设置                         `setx <变量>=<值>`
| Redirect command output to file                           |                               | set                               |
翻译:重定向命令输出到文件                          |  | 设置                            |
|                                                           |                               |                                   |
| Open file dor directory with default system application   | xdg-open file1.ppt            | start file1.ppt                   |
翻译:打开文件或目录使用默认系统应用程序  
| xdg-open file1.ppt            | start file1.ppt                   |
|                                                           |                               |                                   |
| Shrink executable file size                               | strip                         | strip (included w/ Free Pascal)   |
翻译:缩小可执行文件大小                                   | strip                          | strip（包含于Free Pascal中）     |
|                                                           |                               |                                   |

- Note:
翻译:- 注意：

- xdg-open only exists on Linux or BSD with X11
翻译:xdg-open 仅存在于带有 X11 的 Linux 或 BSD 系统。
- On MacOSX the equivalent is open
翻译:在MacOSX上，等效命令是打开

Created: 2018-07-26 Thu 07:42
翻译:创建时间：2018年7月26日，星期四 07:42

[[http://www.gnu.org/software/emacs/][Emacs]] 25.3.1 ([[http://orgmode.org][Org]] mode 8.2.10)
翻译:Emacs 25.3.1（Org mode 8.2.10）

[[http://validator.w3.org/check?uri=referer][Validate]]
翻译:您可以使用在线HTML验证工具来检查网页是否符合W3C的标准。
